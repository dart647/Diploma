@model JournalForSecurity.ViewModels.SecTaskModel

@{
    ViewData["Title"] = "Задачи";
}

<h1>Задачи</h1>
<a class="btn" asp-action="CreateTask">Создать задачу</a>
<hr />

<div class="row">
    @foreach (var item in Model.cardTasks)
    {
        <div class="col-4">
            <div class="card">
                <div class="card-header text-center">
                    @Html.DisplayFor(modelItem => item.Name)
                </div>
                <div class="card-header text-center">
                    @String.Format($"{item.User.FirstName} {item.User.SecondName} {item.User.ThirdName}")
                </div>
                <div class="card-header text-center">
                    @String.Format($"{item.DateBegin} - {item.DateEnd}")
                </div>
                <div class="card-body text-center">
                    @Html.DisplayFor(modelItem => item.Department.Name)
                    <div class="card-text">
                        @Html.DisplayFor(modelItem => item.Desc)
                    </div>
                </div>
                @if (!String.IsNullOrEmpty(item.Answer))
                {
                    <hr />
                    <div class="card-body text-center">
                        <div class="card-text">
                            @Html.DisplayFor(modelItem => item.Answer)
                        </div>
                    </div>
                }
                <div class="card-footer text-center">
                    @{
                        if (item.State)
                        {
                            <p>Выполнено</p>
                        }
                        else if (item.DateEnd > DateTime.Now)
                        {
                            <p>Ожидание/Выполнение</p>
                        }
                        else if (item.Explanation != null)
                        {
                            <p>Написана объянительная</p>
                        }
                        else
                        {
                            <p>Не выполнено</p>
                        }
                    }
                </div>
                <div class="card-footer text-center">
                    @{
                        if (item.Explanation != null)
                        {
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#expalationNote-@item.Id">
                                Просмотреть объяснение
                            </button>

                            <!-- Modal -->
                            <div class="modal fade" id="expalationNote-@item.Id" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="exampleModalLabel">Пояснительная записка</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            <div class="form-group">
                                                <label class="control-label" for="userFio">От:</label>
                                                <p class="form-control" id="userFio">@String.Format($"{item.Explanation.User.SecondName} {item.Explanation.User.FirstName} {item.Explanation.User.ThirdName}")</p>
                                            </div>
                                            <div class="form-group">
                                                <label asp-for="TaskName"></label>
                                                <p class="form-control">@item.Explanation.TaskName</p>
                                            </div>
                                            <div class="form-group">
                                                <label asp-for="Explanation" class="control-label"></label>
                                                <textarea class="form-control border" readonly>@item.Explanation.Explanation</textarea>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }

                    <form asp-action="DeleteTask" asp-route-department="@ViewBag.Department" method="post">
                        @if (!item.State && item.DateEnd > DateTime.Now && item.User.UserName.Equals(User.Identity.Name))
                        {
                            <a class="btn btn-primary" asp-action="EditTask" asp-route-id="@item.Id" asp-route-department="@ViewBag.Department">Изменить</a>
                        }

                        @if (!item.State && item.DateBegin > DateTime.Now && item.User.UserName.Equals(User.Identity.Name))
                        {

                            <input type="hidden" name="id" value="@item.Id" />
                            <input type="submit" class="btn btn-danger" value="Удалить" />
                        }
                    </form>
                </div>
            </div>
            <br />
        </div>
    }
</div>
